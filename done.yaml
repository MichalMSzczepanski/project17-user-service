5 fixes:
  <not tracked>
4 logic:
  7 login, register, password reset and password set refactor
  6 login, register, password reset and password set
  5 encapsulate password update logic
  4 update user creation and update logic for authentication
  3 custom exceptions for user crud
  2 global exception handler
  1 basic crud for users
3 semantics:
  16 notifications for activation, password and email update
  15 introduce kafka producer for notification handling
  14 refactor ActivationKey to SecretKey
  13 catch mongo exceptions for user creation, activation and update in case rollback needed
  12 add activation key logic with mongo
  11 validate user email duplication
  10 create user activation logic
  9 create util for password hashing and holding regexes for validation
  8 password hashing logic
  7 delete test controller
  6 create user assembler for tests
  5 user service crud tests
  4 user mapper
  3 create draft flow for persisting user
  2 create user roles
  1 create user entity
2 config:
  21 update local and prod config for port exposure in docker-compose
  20 introduce custom library for externalized properties
  19 configure kafka for prod
  18 update user entity flyway script for less non-nulls
  17 working prod/ local for mongo/ postgres
  16 add mongo db for prod, local and embedded test
  15 change port to 8081 for service discovery
  14 refactor project directory structure to due to nested 'user-service/user-service'
  13 update readme location
  12 move docker-compose for local environment setup to presentday config repo
  11 refactor project directory structure
  10 logger configuration
  9 h2 db for test profile
  8 test profile
  7 add readme.md
  6 slf4j logger
  5 add flyway script creating user table V1__create_table_users_20240120.sql
  4 configure flyway
  3 initialize postgresql db for in docker-compose for local
  2 initialize postgresql db for in docker-compose for prod
  1 set up 'local' and 'prod' profiles
1 git:
  1 initialize .gitignore and exclude user-service in .gitignore

